import{S as q,i as B,s as F,e as n,k as b,t as C,w as H,c as p,a as c,d as a,m as g,h as L,x as W,b as d,g as k,K as o,y as Y,q as j,o as K,B as M}from"../chunks/index-d8854178.js";import{N as P}from"../chunks/NavigationButton-630e7a6e.js";import"../chunks/Button-b44a52ed.js";function U(I){let s;return{c(){s=C("Start flowing")},l(r){s=L(r,"Start flowing")},m(r,i){k(r,s,i)},d(r){r&&a(s)}}}function G(I){let s,r,i,_,z,w,D,f,y,S,m,V,$,l,h,A,R,u,x;return u=new P({props:{large:!0,to:"scan/mapscanning",$$slots:{default:[U]},$$scope:{ctx:I}}}),{c(){s=n("div"),r=b(),i=n("header"),_=n("div"),z=b(),w=n("div"),D=b(),f=n("div"),y=n("div"),S=b(),m=n("h2"),V=C("AR lavaFlow"),$=b(),l=n("main"),h=n("div"),A=C(`When a volcano erupts, the lava produced is unstoppable. It moves so slowly you can outrun it,
		but with the density of molten rock, and a temperature of over 1000 degrees Celsius, it will
		destroy everything in its path. This path being the steepest possible down a mountain. Your goal
		is to draw a mountain on a piece of paper. Scan it and place targets on the map where you
		predict the lava will reach.`),R=b(),H(u.$$.fragment),this.h()},l(e){s=p(e,"DIV",{class:!0}),c(s).forEach(a),r=g(e),i=p(e,"HEADER",{class:!0});var t=c(i);_=p(t,"DIV",{class:!0}),c(_).forEach(a),z=g(t),w=p(t,"DIV",{class:!0}),c(w).forEach(a),D=g(t),f=p(t,"DIV",{class:!0});var v=c(f);y=p(v,"DIV",{class:!0}),c(y).forEach(a),S=g(v),m=p(v,"H2",{class:!0});var N=c(m);V=L(N,"AR lavaFlow"),N.forEach(a),v.forEach(a),t.forEach(a),$=g(e),l=p(e,"MAIN",{class:!0});var E=c(l);h=p(E,"DIV",{class:!0});var T=c(h);A=L(T,`When a volcano erupts, the lava produced is unstoppable. It moves so slowly you can outrun it,
		but with the density of molten rock, and a temperature of over 1000 degrees Celsius, it will
		destroy everything in its path. This path being the steepest possible down a mountain. Your goal
		is to draw a mountain on a piece of paper. Scan it and place targets on the map where you
		predict the lava will reach.`),T.forEach(a),R=g(E),W(u.$$.fragment,E),E.forEach(a),this.h()},h(){d(s,"class","tudelftLogo svelte-1ibkp2f"),d(_,"class","img svelte-1ibkp2f"),d(w,"class","img backdrop svelte-1ibkp2f"),d(y,"class","logo svelte-1ibkp2f"),d(m,"class","svelte-1ibkp2f"),d(f,"class","title svelte-1ibkp2f"),d(i,"class","svelte-1ibkp2f"),d(h,"class","introduction svelte-1ibkp2f"),d(l,"class","svelte-1ibkp2f")},m(e,t){k(e,s,t),k(e,r,t),k(e,i,t),o(i,_),o(i,z),o(i,w),o(i,D),o(i,f),o(f,y),o(f,S),o(f,m),o(m,V),k(e,$,t),k(e,l,t),o(l,h),o(h,A),o(l,R),Y(u,l,null),x=!0},p(e,[t]){const v={};t&1&&(v.$$scope={dirty:t,ctx:e}),u.$set(v)},i(e){x||(j(u.$$.fragment,e),x=!0)},o(e){K(u.$$.fragment,e),x=!1},d(e){e&&a(s),e&&a(r),e&&a(i),e&&a($),e&&a(l),M(u)}}}const X=!0;class Z extends q{constructor(s){super(),B(this,s,null,G,F,{})}}export{Z as default,X as prerender};
