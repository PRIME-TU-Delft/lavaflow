import{w as e}from"./index-aa581d55.js";function o(){const{subscribe:h,set:s}=e();return{subscribe:h,set:t=>{console.log("set contours in store",t),s(t)}}}const u=o();class f{constructor(s,t,i){this.dragging=!1,this.offsetX=0,this.offsetY=0,this.x=s,this.y=t,this.size=i}update(s){!this.dragging||s.mouseX<=0||s.mouseY<=0||s.mouseX>=s.width||s.mouseY>=s.height||(this.x=s.mouseX+this.offsetX,this.y=s.mouseY+this.offsetY)}setPosition(s,t){this.x=s,this.y=t}drawRect(s,t){s.stroke(0,127),s.fill(50,127),s.strokeWeight(1),s.rectMode(s.CENTER),s.rect(this.x+this.size/2,this.y+this.size/2,t,t)}drawCircle(s,t){s.stroke(0,127),s.fill(50,127),s.strokeWeight(1),s.circle(this.x+this.size/2,this.y+this.size/2,t)}drawTriangle(s,t){s.stroke(0,127),s.fill(50,127),s.strokeWeight(1),s.triangle(this.x+(this.size-t)/2,this.y+(this.size+t)/2,this.x+(this.size+t)/2,this.y+(this.size+t)/2,this.x+this.size/2,this.y+(this.size-t)/2)}drawCross(s,t){s.stroke(0,127),s.strokeWeight(7),s.line(this.x+(this.size-t)/2,this.y+(this.size+t)/2,this.x+(this.size+t)/2,this.y+(this.size-t)/2),s.line(this.x+(this.size+t)/2,this.y+(this.size+t)/2,this.x+(this.size-t)/2,this.y+(this.size-t)/2)}pressed(s){const t=s.mouseX>this.x&&s.mouseX<this.x+this.size,i=s.mouseY>this.y&&s.mouseY<this.y+this.size;t&&i&&(this.dragging=!0,this.offsetX=this.x-s.mouseX,this.offsetY=this.y-s.mouseY)}released(){this.dragging=!1}}export{f as D,u as c};
